{"version":3,"sources":["../src/take_profit_sharwaFinance.ts","../src/config.json","../src/abi/abi_take_profit.json","../src/abi/abi_positions_manager.json","../src/abi/abi_operational_treasury.json"],"sourcesContent":["import { Contract, Provider, Signer, EventLog, Log, Interface, ZeroAddress } from \"ethers\";\nimport conf from \"./config.json\";\nimport abi_take_profit from \"./abi/abi_take_profit.json\";\nimport abi_positions_manager from \"./abi/abi_positions_manager.json\";\nimport abi_operational_treasury from \"./abi/abi_operational_treasury.json\"\n\ntype TakeProfitData = {\n    tokenId: bigint\n    upperStopPrice: number\n    lowerStopPrice: number\n    blockNumber: number\n}\n\ntype TransferData = {\n    tokenId: bigint,\n    blockNumber: number\n}\n\nexport class TakeProfitSharwaFinance {\n    signer: Signer\n    provider: Provider\n    take_profit: Contract\n    positions_manager: Contract\n    operational_treasury: Contract\n    iface: Interface\n\n    constructor(provider: Provider, signer: Signer) {\n        this.provider = provider\n        this.signer = signer\n        this.take_profit = new Contract(conf.take_profit_address, abi_take_profit, signer)\n        this.positions_manager = new Contract(conf.positions_manager_address, abi_positions_manager, signer)\n        this.operational_treasury = new Contract(conf.operational_treasury_address, abi_operational_treasury, signer)\n        this.iface = new Interface(abi_take_profit)\n    }\n\n    // STATE CHANGE FUNCTIONS //\n\n    async setTakeProfit(tokenId: bigint, upperStopPrice: bigint, lowerStopPrice: bigint) {\n        return await this.take_profit.setTakeProfit(tokenId, {upperStopPrice, lowerStopPrice})\n    }\n\n    async deleteTakeProfit(tokenId: bigint) {\n        await this.take_profit.deleteTakeProfit(tokenId)\n    }\n\n    async enableAutoExecutionForAllOptions() {\n        await this.positions_manager.setApprovalForAll(conf.take_profit_address, true)\n    }\n\n    async disableAutoExecutionForAllOptions() {\n        await this.positions_manager.setApprovalForAll(conf.take_profit_address, false)\n    }\n\n    async enableAutoExecutionForOption(tokenId: bigint) {\n        await this.positions_manager.approve(conf.take_profit_address, tokenId)\n    }\n\n    async disableAutoExecutionForOption(tokenId: bigint) {\n        await this.positions_manager.approve(ZeroAddress, tokenId)\n    }\n\n    // FILTER_OPTIONS FUNCTIONS //\n\n    async filterOptionsWithAutoExecutionEnabled(user: string, arrAcivaOptions: bigint[]): Promise<bigint[]> {\n        const ApprovalFilter = this.positions_manager.filters.Approval(user, conf.take_profit_address, null)\n        const arrApproval = await this.positions_manager.queryFilter(ApprovalFilter)\n        const uniqApprovalLogs = this._uniqTransferData(arrApproval)\n\n        const DisableApprovalFilter = this.positions_manager.filters.Approval(user, ZeroAddress, null)\n        const arrDisableApproval = await this.positions_manager.queryFilter(DisableApprovalFilter)\n        const uniqDisableApprovalLogs = this._uniqTransferData(arrDisableApproval)\n\n        const ApprovalForAllFilter = this.positions_manager.filters.ApprovalForAll(user, conf.take_profit_address, null)\n        const arrApprovalForAll = await this.positions_manager.queryFilter(ApprovalForAllFilter)\n        const isApprovalForAll = this._isApprovalForAllData(arrApprovalForAll)\n\n        const autoExecutionOptions: bigint[] = []\n\n        for (const i in arrAcivaOptions) {\n            const logApproval = uniqApprovalLogs.find(elem=> elem.tokenId === arrAcivaOptions[i]);\n            const logDisableApproval = uniqDisableApprovalLogs.find(elem=> elem.tokenId === arrAcivaOptions[i]);\n\n            let isApproved: boolean = true\n\n            if (logDisableApproval != undefined && logApproval != undefined) {\n                if (logDisableApproval.blockNumber > logApproval.blockNumber) {\n                    isApproved = false\n                }\n            } \n\n            if (isApprovalForAll) {\n                autoExecutionOptions.push(arrAcivaOptions[i])\n            } else {\n                if (logApproval != undefined && isApproved) {\n                    autoExecutionOptions.push(arrAcivaOptions[i])\n                }\n            }\n        }\n\n        return autoExecutionOptions\n    }\n\n    async filterOptionsWithTakeProfits(user: string, arrAcivaOptions: bigint[]): Promise<Map<bigint,TakeProfitData>> {\n        let activeTakeProfits = new Map()\n\n        const TakeProfitSetFilter = this.take_profit.filters.TakeProfitSet(null, user)\n        const arrLogsTakeProfitSet = await this.take_profit.queryFilter(TakeProfitSetFilter)\n        const uniqSetLogs = this._uniqTakeProfitData(arrLogsTakeProfitSet) \n\n        for (const i in arrAcivaOptions) {\n            const logSet = uniqSetLogs.find(elem=> elem.tokenId === arrAcivaOptions[i]);\n\n            const TakeProfitDeletedFilter = this.take_profit.filters.TakeProfitDeleted(arrAcivaOptions[i])\n            const logTakeProfitDeleted = await this.take_profit.queryFilter(TakeProfitDeletedFilter)\n    \n            const TakeProfitExecutedFilter = this.take_profit.filters.TakeProfitExecuted(arrAcivaOptions[i], null)\n            const logTakeProfitExecuted = await this.take_profit.queryFilter(TakeProfitExecutedFilter)\n\n            const lastDeleteBlockNumber = logTakeProfitDeleted.length == 0 ? \n                0 : \n                logTakeProfitDeleted[logTakeProfitDeleted.length-1].blockNumber\n\n            if (logSet != undefined) {\n                if (lastDeleteBlockNumber < logSet.blockNumber && logTakeProfitExecuted.length == 0) {\n                    if ((logSet.upperStopPrice == 0 && logSet.lowerStopPrice == 0) == false) {\n                        activeTakeProfits.set(\n                            logSet.tokenId, {\n                            upperStopPrice: logSet.upperStopPrice,\n                            lowerStopPrice: logSet.lowerStopPrice\n                        })\n                    }\n                }\n            }\n\n        }\n\n        return activeTakeProfits\n    }\n\n    async getAutoExecutedOptions(user: string, arrAcivaOptions: bigint[]): Promise<bigint[]> {\n        let executeTakeProfits: bigint[] = []\n\n        for (const i in arrAcivaOptions) {\n            const TakeProfitExecutedFilter = this.take_profit.filters.TakeProfitExecuted(arrAcivaOptions[i], null)\n            const logTakeProfitExecuted = await this.take_profit.queryFilter(TakeProfitExecutedFilter)\n\n            if (logTakeProfitExecuted.length != 0) {\n                executeTakeProfits.push(arrAcivaOptions[i])\n            }\n        }\n\n        return executeTakeProfits\n    }\n\n    // DATA QUERY FUNCTIONS //\n\n    async isAutoExecutionEnabledForOption(tokenId: bigint): Promise<boolean> {\n        return await this.positions_manager.isApprovedOrOwner(conf.take_profit_address, tokenId)\n    }\n\n    async isAutoExecutionEnabledForAllOptions(user: string): Promise<boolean> {\n        const ApprovalForAllFilter = this.positions_manager.filters.ApprovalForAll(user, conf.take_profit_address, null)\n        const arrApprovalForAll = await this.positions_manager.queryFilter(ApprovalForAllFilter)\n        return this._isApprovalForAllData(arrApprovalForAll)\n    }\n\n    async getActiveTakeProfits(user: string): Promise<Map<bigint,TakeProfitData>> {\n        let activeTakeProfits = new Map()\n        const userSetLogs = await this.getUserSetLogs(user)\n\n        for (const i in userSetLogs) {\n            const TakeProfitDeletedFilter = this.take_profit.filters.TakeProfitDeleted(userSetLogs[i].tokenId)\n            const logTakeProfitDeleted = await this.take_profit.queryFilter(TakeProfitDeletedFilter)\n    \n            const TakeProfitExecutedFilter = this.take_profit.filters.TakeProfitExecuted(userSetLogs[i].tokenId, null)\n            const logTakeProfitExecuted = await this.take_profit.queryFilter(TakeProfitExecutedFilter)\n\n            const lastDeleteBlockNumber = logTakeProfitDeleted.length == 0 ? \n                0 : \n                logTakeProfitDeleted[logTakeProfitDeleted.length-1].blockNumber\n\n            if (lastDeleteBlockNumber < userSetLogs[i].blockNumber && logTakeProfitExecuted.length == 0) {\n                if ((userSetLogs[i].upperStopPrice == 0 && userSetLogs[i].lowerStopPrice == 0) == false) {\n                    activeTakeProfits.set(\n                        userSetLogs[i].tokenId, {\n                        upperStopPrice: userSetLogs[i].upperStopPrice,\n                        lowerStopPrice: userSetLogs[i].lowerStopPrice\n                    })\n                }\n            }\n        }\n\n        return activeTakeProfits\n    }\n\n    async getAllTakeProfits(user: string): Promise<Map<bigint,TakeProfitData>> {\n        let allTakeProfits = new Map()\n        const userSetLogs = await this.getUserSetLogs(user)\n\n        for (const i in userSetLogs) {\n            const TakeProfitDeletedFilter = this.take_profit.filters.TakeProfitDeleted(userSetLogs[i].tokenId)\n            const logTakeProfitDeleted = await this.take_profit.queryFilter(TakeProfitDeletedFilter)\n\n            const lastDeleteBlockNumber = logTakeProfitDeleted.length == 0 ? \n                0 : \n                logTakeProfitDeleted[logTakeProfitDeleted.length-1].blockNumber\n\n            if (lastDeleteBlockNumber < userSetLogs[i].blockNumber) {\n                allTakeProfits.set(\n                    userSetLogs[i].tokenId, {\n                    upperStopPrice: userSetLogs[i].upperStopPrice,\n                    lowerStopPrice: userSetLogs[i].lowerStopPrice\n                })\n            }\n        }\n\n        return allTakeProfits\n    }\n\n    async getExecuteTakeProfits(user: string): Promise<bigint[]> {\n        const TakeProfitExecutedFilter = this.take_profit.filters.TakeProfitExecuted(null, user)\n        const arrLogsTakeProfitExecuted = (await this.take_profit.queryFilter(TakeProfitExecutedFilter)).reverse()\n\n        let executeTakeProfits: bigint[] = []\n\n        for (const i in arrLogsTakeProfitExecuted) {\n            const log = arrLogsTakeProfitExecuted[i]\n            if (log instanceof EventLog) {\n                const arg = log.args\n                executeTakeProfits.push(arg.tokenId)\n            }\n        }\n\n        return executeTakeProfits\n    }\n\n    async getUserSetLogs(user: string): Promise<TakeProfitData[]> {\n        const TransferInFilter = this.positions_manager.filters.Transfer(null, user, null)\n        const arrLogsTransferIn = await this.positions_manager.queryFilter(TransferInFilter)\n        const uniqTransfersIn = this._uniqTransferData(arrLogsTransferIn)\n\n        const TransferOutFilter = this.positions_manager.filters.Transfer(user, null, null)\n        const arrLogsTransferOut = await this.positions_manager.queryFilter(TransferOutFilter)\n        const uniqTransfersOut = this._uniqTransferData(arrLogsTransferOut)\n\n        const TakeProfitSetFilter = this.take_profit.filters.TakeProfitSet(null, user)\n        const arrLogsTakeProfitSet = await this.take_profit.queryFilter(TakeProfitSetFilter)\n        const uniqSetLogs = this._uniqTakeProfitData(arrLogsTakeProfitSet) \n\n        const userSetLogs: TakeProfitData[] = []\n\n        for (const i in uniqTransfersIn) {\n            const logIn = uniqTransfersIn.find(elem=> elem.tokenId === uniqTransfersIn[i].tokenId);\n            const logOut = uniqTransfersOut.find(elem=> elem.tokenId === uniqTransfersIn[i].tokenId);\n            const logSet = uniqSetLogs.find(elem=> elem.tokenId === uniqTransfersIn[i].tokenId);\n            if (logIn != undefined && logOut != undefined) {\n                if (logIn.blockNumber > logOut.blockNumber && logSet != undefined) {\n                    userSetLogs.push(logSet)\n                }\n            } else if (logOut == undefined) {\n                if (logIn != undefined && logSet != undefined) {\n                    userSetLogs.push(logSet)\n                }\n            }\n        }\n\n        return userSetLogs\n    }\n\n    // PRIVATE FUNCTIONS //\n\n    private _isApprovalForAllData(array: (EventLog | Log)[]): boolean {\n        if (array.length == 0) {\n            return false\n        }\n        const map = new Map();\n        array.forEach(item => {\n            if (item instanceof EventLog) {\n                map.set(item.blockNumber, item.args.approved);\n            } else if (item instanceof Log) {\n                const data = item.data\n                const topics = [...item.topics]\n                const decodeLog = this.iface.parseLog({data, topics})\n                if (decodeLog === null) {\n                    throw new Error(\"Failed to decode log\");\n                }\n                map.set(item.blockNumber, decodeLog.args.approved);\n            }\n          })\n        const returnArr = Array.from(map.values())\n        return returnArr[returnArr.length-1];\n    }\n\n    private _uniqArrayData(array: (EventLog | Log)[]): bigint[] {\n        const arr: bigint[] = []\n        array.forEach(item => {\n            if (item instanceof EventLog) {\n                arr.push(item.args[0])\n            } else if (item instanceof Log) {\n                const data = item.data\n                const topics = [...item.topics]\n                const decodeLog = this.iface.parseLog({data, topics})\n                if (decodeLog === null) {\n                    throw new Error(\"Failed to decode log\");\n                }\n                arr.push(decodeLog.args[0])\n            }\n        })\n        return arr\n    }\n\n    private _uniqTransferData(array: (EventLog | Log)[]): TransferData[] {\n        const map = new Map<bigint,TransferData>();\n        array.forEach(item => {\n            let decodeData: TransferData = {} as TransferData;\n            if (item instanceof EventLog) {\n                decodeData = {\n                    tokenId: item.args.tokenId,\n                    blockNumber: item.blockNumber\n                }\n            } else if (item instanceof Log) {\n                const data = item.data\n                const topics = [...item.topics]\n                const decodeLog = this.iface.parseLog({data, topics})\n                if (decodeLog === null) {\n                    throw new Error(\"Failed to decode log\");\n                }\n                decodeData = {\n                    tokenId: decodeLog.args.tokenId,\n                    blockNumber: item.blockNumber\n                }\n            }\n            map.set(decodeData.tokenId, decodeData);\n          })\n        return Array.from(map.values());\n    }\n\n    private _uniqTakeProfitData(array: (EventLog | Log)[]): TakeProfitData[] {\n        const map = new Map<bigint, TakeProfitData>();\n        array.forEach(item => {\n            let decodeData: TakeProfitData = {} as TakeProfitData;\n            if (item instanceof EventLog) {\n                decodeData = {\n                    tokenId: item.args.tokenId, \n                    upperStopPrice: item.args.upperStopPrice, \n                    lowerStopPrice: item.args.lowerStopPrice,\n                    blockNumber: item.blockNumber\n                }\n            } else if (item instanceof Log) {\n                const data = item.data\n                const topics = [...item.topics]\n                const decodeLog = this.iface.parseLog({data, topics})\n                if (decodeLog === null) {\n                    throw new Error(\"Failed to decode log\");\n                }\n                decodeData = {\n                    tokenId: decodeLog.args.tokenId, \n                    upperStopPrice: decodeLog.args.upperStopPrice, \n                    lowerStopPrice: decodeLog.args.lowerStopPrice,\n                    blockNumber: item.blockNumber\n                };\n            }\n            map.set(decodeData.tokenId, decodeData);\n          })\n        return Array.from(map.values());\n    }\n}","{\n    \"take_profit_address\": \"0xb87b9D84E7BeF23341a53D3c721a4C15D40F66A8\",\n    \"positions_manager_address\": \"0x5Fe380D68fEe022d8acd42dc4D36FbfB249a76d5\",\n    \"operational_treasury_address\": \"0xec096ea6eB9aa5ea689b0CF00882366E92377371\"\n}","[\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_positionManager\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_operationalTreasury\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TakeProfitDeleted\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"TakeProfitExecuted\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"upperStopPrice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"lowerStopPrice\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TakeProfitSet\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"checkTakeProfit\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"takeProfitTriggered\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"deleteTakeProfit\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"executeTakeProfit\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getCurrentPrice\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getExpirationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getPayOffAmount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"globalTimeToExecution\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"isOptionActive\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"operationalTreasury\",\n    \"outputs\": [\n      {\n        \"internalType\": \"contract IOperationalTreasury\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"positionManager\",\n    \"outputs\": [\n      {\n        \"internalType\": \"contract IPositionsManager\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"newGlobalTimeToExecution\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setGlobalTimeToExecution\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"upperStopPrice\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"lowerStopPrice\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct ITakeProfit.TakeInfo\",\n        \"name\": \"takeProfitParams\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"setTakeProfit\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenIdToTakeInfo\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"upperStopPrice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"lowerStopPrice\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n\n  ","[\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"balance\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"isApprovedOrOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"nextTokenId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n]\n\n\n  ","[\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Expired\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Paid\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Replenished\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"benchmark\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"contract IHegicStrategy\",\n          \"name\": \"strategy\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"holder\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"period\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes[]\",\n          \"name\": \"additional\",\n          \"type\": \"bytes[]\"\n        }\n      ],\n      \"name\": \"buy\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"coverPool\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ICoverPool\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"contract IHegicStrategy\",\n          \"name\": \"strategy\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"lockedByStrategy\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"lockedAmount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"lockedLiquidity\",\n      \"outputs\": [\n        {\n          \"internalType\": \"enum IOperationalTreasury.LockedLiquidityState\",\n          \"name\": \"state\",\n          \"type\": \"uint8\"\n        },\n        {\n          \"internalType\": \"contract IHegicStrategy\",\n          \"name\": \"strategy\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint128\",\n          \"name\": \"negativepnl\",\n          \"type\": \"uint128\"\n        },\n        {\n          \"internalType\": \"uint128\",\n          \"name\": \"positivepnl\",\n          \"type\": \"uint128\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"expiration\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"lockedPremium\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"manager\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IPositionsManager\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"positionID\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"payOff\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"token\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalBalance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalLocked\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"lockedLiquidityID\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"unlock\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n  "],"mappings":"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","names":[]}